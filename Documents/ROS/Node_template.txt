OOP Python Code Template for Nodes

    #!/usr/bin/env python3
    import rclpy
    from rclpy.node import Node
     
     
    class MyCustomNode(Node): # MODIFY NAME
        def __init__(self):
            super().__init__("node_name") # MODIFY NAME
     
     
    def main(args=None):
        rclpy.init(args=args)
        node = MyCustomNode() # MODIFY NAME
        rclpy.spin(node)
        rclpy.shutdown()
     
     
    if __name__ == "__main__":
        main()


OOP C++ Code Template for Nodes

    #include "rclcpp/rclcpp.hpp"
     
    class MyCustomNode : public rclcpp::Node // MODIFY NAME
    {
    public:
        MyCustomNode() : Node("node_name") // MODIFY NAME
        {
        }
     
    private:
    };
     
    int main(int argc, char **argv)
    {
        rclcpp::init(argc, argv);
        auto node = std::make_shared<MyCustomNode>(); // MODIFY NAME
        rclcpp::spin(node);
        rclcpp::shutdown();
        return 0;
    }
    
    
CMakeLists.txt :
 
cmake_minimum_required(VERSION 3.5)
project(my_cpp_pkg)

# Default to C++14
if(NOT CMAKE_CXX_STANDARD)
  set(CMAKE_CXX_STANDARD 14)
endif()

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

# find dependencies
find_package(ament_cmake REQUIRED)
find_package(rclcpp REQUIRED)

add_executable(cpp_node src/my_first_node.cpp)
ament_target_dependencies(cpp_node rclcpp)

install(TARGETS
  cpp_node
  DESTINATION lib/${PROJECT_NAME}
)


c_cpp_properties.json:
{
    "configurations": [
        {
            "name": "Linux",
            "includePath": [
                "${workspaceFolder}/**",
                "/opt/ros/foxy/include/"
            ],
            "defines": [],
            "compilerPath": "/usr/bin/gcc",
            "cStandard": "gnu17",
            "cppStandard": "gnu++14",
            "intelliSenseMode": "gcc-x64"
        }
    ],
    "version": 4
}
ament_package()


setup.py:
from setuptools import setup

package_name = 'my_py_pkg'

setup(
    name=package_name,
    version='0.0.0',
    packages=[package_name],
    data_files=[
        ('share/ament_index/resource_index/packages',
            ['resource/' + package_name]),
        ('share/' + package_name, ['package.xml']),
    ],
    install_requires=['setuptools'],
    zip_safe=True,
    maintainer='arkadi',
    maintainer_email='arkadi@todo.todo',
    description='TODO: Package description',
    license='TODO: License declaration',
    tests_require=['pytest'],
    entry_points={
        'console_scripts': [
            "py_node = my_py_pkg.my_first_node:main"
        ],
    },
)
